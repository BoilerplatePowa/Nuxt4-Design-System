name: Publish to GitHub Packages

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:
        inputs:
            version:
                description: 'Version to release (e.g., 1.0.0)'
                required: true
                type: string

permissions:
    contents: write
    packages: write

env:
    NODE_VERSION: '22'
    REGISTRY_URL: 'https://npm.pkg.github.com'
    PACKAGE_SCOPE: '@boilerplatepowa'

jobs:
    # Pre-release validation
    validate:
        name: Validate Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run all tests
              run: npm run test

            - name: Build module
              run: npm run prepack

            - name: Validate package
              run: npm pack --dry-run

    # Publish to GitHub Packages
    publish:
        name: Publish to GitHub Packages
        runs-on: ubuntu-latest
        needs: validate
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'
                  registry-url: ${{ env.REGISTRY_URL }}

            - name: Install dependencies
              run: npm ci

            - name: Build module
              run: npm run prepack

            - name: Publish to GitHub Packages
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Create GitHub Release
    github-release:
        name: Create GitHub Release
        runs-on: ubuntu-latest
        needs: publish
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Generate changelog
              id: changelog
              run: |
                  # Extract version from tag
                  VERSION=${GITHUB_REF#refs/tags/v}

                  # Generate changelog (simplified)
                  echo "## What's Changed" > CHANGELOG.md
                  echo "- Automated release v$VERSION" >> CHANGELOG.md
                  echo "- All quality gates passed" >> CHANGELOG.md
                  echo "- Package published to GitHub Packages" >> CHANGELOG.md

                  # Output for next step
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  cat CHANGELOG.md >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Create Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: Release ${{ github.ref_name }}
                  body: ${{ steps.changelog.outputs.changelog }}
                  draft: false
                  prerelease: false
